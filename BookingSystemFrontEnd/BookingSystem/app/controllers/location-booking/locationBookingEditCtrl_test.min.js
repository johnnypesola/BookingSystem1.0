describe("module: bookingSystem.locationBooking",function(){beforeEach(module("bookingSystem"));beforeEach(module("bookingSystem.locationBooking"));beforeEach(module("bookingSystem.commonFilters"));var LocationBookingListCtrl,LocationBookingCreateCtrl,LocationBookingEditCtrl;var testCurrentDateObj;var $scope;var $location;var $rootScope;beforeEach(function(){module(function($provide){$provide.factory("LocationBooking",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getLocationBooking,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocationBooking,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("Booking",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getBooking,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryBooking,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({BookingId:85},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("BookingType",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getBookingType,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryBookingType,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("Customer",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getCustomer,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryCustomer,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("Location",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getLocation,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocation,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({LocationId:3},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),queryFreeForPeriod:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocation,$q)})}});$provide.factory("LocationFurnituring",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getLocationFurnituring,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocationFurnituring,$q)}),queryForLocation:jasmine.createSpy("queryForLocation").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocationFurnituring,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),saveForLocation:jasmine.createSpy("saveForLocation").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}})})});beforeEach(inject(function($controller,_LocationBooking_,_$location_,$rootScope){$location=_$location_;$scope=$rootScope;LocationBookingEditCtrl=$controller("LocationBookingEditCtrl",{$scope:$scope,LocationBooking:_LocationBooking_,$rootScope:$rootScope})}));describe("LocationBookingEditCtrl controller",function(){it("should call history.back() and create a FlashMessage after successful LocationBooking editing",inject(function($rootScope,$controller,_LocationBooking_,$routeParams){spyOn(history,"back");$scope.booking=TestHelper.JSON.createBookingForLocation;$scope.locationBooking=TestHelper.JSON.createLocationBooking;$scope.locationBooking.SelectedFurnituring={};$scope.locationBooking.SelectedFurnituring.FurnituringId=2;$scope.StartDate="2015-05-05";$scope.StartTime="10:00";$scope.EndDate="2015-05-05";$scope.EndTime="10:30";$routeParams.locationBookingId=4;TestHelper.JSON.createdLocationBooking.LocationBookingId=4;$scope.save();expect(_LocationBooking_.save).toHaveBeenCalledWith(TestHelper.JSON.createdLocationBooking);$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect(history.back).toHaveBeenCalled()}));it("should create a FlashMessage after duplicate LocationBooking editing",inject(function($rootScope,$controller,_LocationBooking_,$q){_LocationBooking_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"409","")});spyOn(history,"back");$scope.locationBooking.SelectedFurnituring={};$scope.locationBooking.SelectedFurnituring.FurnituringId=2;$scope.StartDate="2015-05-05";$scope.StartTime="10:00";$scope.EndDate="2015-05-05";$scope.EndTime="10:30";$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual("Det finns redan en annan lokal/plats-bokning som krockar med den här bokningen.");expect(history.back).not.toHaveBeenCalled()}));it("should create a FlashMessage after unsuccessful LocationBooking editing",inject(function($rootScope,$controller,_LocationBooking_,$q){_LocationBooking_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"500")});spyOn(history,"back");$scope.locationBooking.SelectedFurnituring={};$scope.locationBooking.SelectedFurnituring.FurnituringId=2;$scope.StartDate="2015-05-05";$scope.StartTime="10:00";$scope.EndDate="2015-05-05";$scope.EndTime="10:30";$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual("Ett oväntat fel uppstod när lokal/plats-bokningen skulle sparas");expect(history.back).not.toHaveBeenCalled()}));it("should create a FlashMessage after unsuccessful LocationBooking editing (locationBooking deleted)",inject(function($rootScope,$controller,_LocationBooking_,$q){_LocationBooking_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"404")});spyOn(history,"back");$scope.locationBooking.SelectedFurnituring={};$scope.locationBooking.SelectedFurnituring.FurnituringId=2;$scope.StartDate="2015-05-05";$scope.StartTime="10:00";$scope.EndDate="2015-05-05";$scope.EndTime="10:30";$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual("Lokal/plats-bokningen existerar inte längre. Hann kanske någon radera den?");expect(history.back).toHaveBeenCalled()}))})});