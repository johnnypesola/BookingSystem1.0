(function(){angular.module("bookingSystem.locationBooking",["bookingSystem.locationBookingServices","bookingSystem.commonFilters","bookingSystem.commonDirectives"]).config(["$routeProvider",function($routeProvider){}]).controller("LocationBookingShowCtrl",["$scope","$routeParams","$location","$rootScope","LocationBooking","API_IMG_PATH_URL","PHOTO_MISSING_SRC",function($scope,$routeParams,$location,$rootScope,LocationBooking,API_IMG_PATH_URL,PHOTO_MISSING_SRC){var that=this;var locationBooking=LocationBooking.get({locationBookingId:$routeParams.locationBookingId});locationBooking.$promise.then(function(){locationBooking.LocationImageSrc=locationBooking.LocationImageSrc===""?PHOTO_MISSING_SRC:API_IMG_PATH_URL+locationBooking.LocationImageSrc});locationBooking.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Lokal/Plats-bokningen kunde inte hämtas, var god försök igen."};$scope.locationBooking=null});$scope.locationBooking=locationBooking}]).controller("LocationBookingListCtrl",["$scope","LocationBooking","$rootScope","$location",function($scope,LocationBooking,$rootScope,$location){var that=this;var currentDateObj;that.initDateVariables=function(){var yearParam=$location.search().ar;var monthParam=$location.search().manad;if(typeof yearParam!=="undefined"&&typeof monthParam!=="undefined"){currentDateObj=moment(yearParam+"-"+$BookSysUtil.String.addLeadingZero(+monthParam+1)+"-01").toDate()}else{currentDateObj=new Date}that.currentYear=currentDateObj.getFullYear();that.currentMonth=currentDateObj.getMonth();that.currentMonthName=moment(currentDateObj).format("MMMM");that.currentMonthNumberOfDays=new Date(that.currentYear,that.currentMonth+1,0).getDate();that.currentMonthStartDateObj=new Date(that.currentYear,that.currentMonth,1);that.currentMonthEndDateObj=new Date(that.currentYear,that.currentMonth,that.currentMonthNumberOfDays)};that.getLocationBookings=function(){that.locationBookings=LocationBooking.queryMoreForPeriod({fromDate:moment(that.currentMonthStartDateObj).format("YYYY-MM-DD"),toDate:moment(that.currentMonthEndDateObj).format("YYYY-MM-DD")});that.locationBookings.$promise.then(function(){$scope.noItemsFound=!that.locationBookings.length});that.locationBookings.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningarna kunde inte hämtas, var god försök igen."}});$scope.locationBookings=that.locationBookings};that.addVarsToScope=function(){$scope.currentYear=that.currentYear;$scope.currentMonthName=that.currentMonthName};$scope.changeToPreviousMonth=function(){if(that.currentMonth==0){that.currentMonth=11;that.currentYear-=1}else{that.currentMonth-=1}$location.search("ar",that.currentYear);$location.search("manad",that.currentMonth);that.initDateVariables();that.getLocationBookings();that.addVarsToScope()};$scope.changeToNextMonth=function(){$location.search("ar",that.currentYear);$location.search("manad",that.currentMonth+1);that.initDateVariables();that.getLocationBookings();that.addVarsToScope()};currentDateObj=new Date;that.initDateVariables();that.getLocationBookings();that.addVarsToScope()}]).controller("LocationBookingCreateCtrl",["$scope","$routeParams","$location","$rootScope","LocationBooking","LocationFurnituring","Location","BookingType","Customer","Booking","$q",function($scope,$routeParams,$location,$rootScope,LocationBooking,LocationFurnituring,Location,BookingType,Customer,Booking,$q){var that=this;$scope.furniturings=[];$scope.locationBooking={};that.getLocations=function(){var deferred=$q.defer(),promise=deferred.promise;$scope.locations=Location.query();$scope.locations.$promise.then(function(){deferred.resolve()});$scope.locations.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Lokaler kunde inte hämtas."}});return promise};that.getBookingTypes=function(){var deferred=$q.defer(),promise=deferred.promise;$scope.bookingTypes=BookingType.query();$scope.bookingTypes.$promise.then(function(){deferred.resolve()});$scope.bookingTypes.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstyper kunde inte hämtas."};deferred.reject()});return promise};that.getCustomers=function(){var deferred=$q.defer(),promise=deferred.promise;$scope.customers=Customer.query();$scope.customers.$promise.then(function(){deferred.resolve()});$scope.customers.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Kunder kunde inte hämtas."};deferred.reject()});return promise};that.getOtherDisplayData=function(){var deferred=$q.defer(),promise=deferred.promise;that.getBookingTypes().then(function(){that.getCustomers().then(function(){that.getLocations().then(function(){deferred.resolve()})})});return promise};that.saveBooking=function(){var deferred=$q.defer(),promise=deferred.promise;if($scope.bookingId==0){promise=Booking.save({BookingId:0,Name:$scope.booking.Name,BookingTypeId:$scope.booking.BookingTypeId,CustomerId:$scope.booking.CustomerId,Provisional:!!parseInt($scope.booking.Provisional,10),NumberOfPeople:$scope.locationBooking.NumberOfPeople,Discount:0,CreatedByUserId:1,ModifiedByUserId:1,ResponsibleUserId:1}).$promise.then(function(createdBooking){$scope.bookingId=createdBooking.BookingId;$rootScope.FlashMessage={type:"success",message:'Bokningstillfället "'+$scope.booking.Name+'" skapades med ett lyckat resultat'};deferred.resolve()}).catch(function(response){if(response.status==409){$rootScope.FlashMessage={type:"error",message:'Det finns redan ett bokningstillfälle som heter "'+$scope.booking.Name+'". Två bokningstillfällen kan inte heta lika.'}}else{$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när bokningstillfället skulle sparas"}}})}else{deferred.resolve()}return promise};that.saveLocationBooking=function(){var deferred=$q.defer(),promise=deferred.promise;LocationBooking.save({BookingId:$scope.bookingId,LocationBookingId:0,LocationId:$scope.locationBooking.LocationId,FurnituringId:$scope.locationBooking.SelectedFurnituring.FurnituringId,StartTime:moment($scope.StartDate+" "+$scope.StartTime).format(),EndTime:moment($scope.EndDate+" "+$scope.EndTime).format(),NumberOfPeople:$scope.locationBooking.NumberOfPeople}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:"Lokal/plats-bokningen skapades med ett lyckat resultat"};deferred.resolve()}).catch(function(response){if(response.status==409){$rootScope.FlashMessage={type:"error",message:"Lokalen är tyvärr redan bokad under vald tidsram."}}else{$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när lokal/plats-bokningen skulle sparas"}}});return promise};that.getLocationsBookingInfo=function(){if(typeof $scope.StartDate!=="undefined"&&typeof $scope.StartTime!=="undefined"&&typeof $scope.EndDate!=="undefined"&&typeof $scope.EndTime!=="undefined"){Location.queryFreeForPeriod({fromDate:$scope.StartDate,fromTime:$scope.StartTime,toDate:$scope.EndDate,toTime:$scope.EndTime}).$promise.then(function(response){$scope.freeLocations=response;$scope.locations=response}).catch(function(response){$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när uppgifter om lediga lokaler skulle hämtas"}})}};that.addDateWatches=function(){$scope.$watch("StartDate",function(newValue,oldValue){that.getLocationsBookingInfo()},true);$scope.$watch("StartTime",function(newValue,oldValue){that.getLocationsBookingInfo()},true);$scope.$watch("EndDate",function(newValue,oldValue){that.getLocationsBookingInfo()},true);$scope.$watch("EndTime",function(newValue,oldValue){that.getLocationsBookingInfo()},true)};$scope.save=function(){that.saveBooking().then(function(){that.saveLocationBooking().then(function(){history.back()})})};$scope.updateFurniturings=function(){if(!!$scope.locationBooking.LocationId){$scope.furniturings=LocationFurnituring.queryForLocation({locationId:$scope.locationBooking.LocationId});$scope.furniturings.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Möbleringar för vald lokal kunde inte hämtas."}}).then(function(){$scope.showInfoAboutNoFurniturings=!$scope.furniturings.length})}else{$scope.furnituring=[]}};that.getOtherDisplayData();$scope.bookingId=$routeParams.bookingId||0;$scope.locationBooking.LocationId=+$location.search()["lokal-id"];that.addDateWatches()}]).controller("LocationBookingEditCtrl",["$scope","$routeParams","$location","$rootScope","LocationBooking","LocationFurnituring","Location","$q",function($scope,$routeParams,$location,$rootScope,LocationBooking,LocationFurnituring,Location,$q){var that=this;that.initLocationBooking=function(){var deferred=$q.defer(),promise=deferred.promise;$scope.locationBooking=LocationBooking.get({locationBookingId:$routeParams.locationBookingId});$scope.locationBooking.$promise.then(function(){$scope.StartDate=moment($scope.locationBooking.StartTime).format("YYYY-MM-DD");$scope.StartTime=moment($scope.locationBooking.StartTime).format("HH:mm");$scope.EndDate=moment($scope.locationBooking.EndTime).format("YYYY-MM-DD");$scope.EndTime=moment($scope.locationBooking.EndTime).format("HH:mm");deferred.resolve()});$scope.locationBooking.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Lokal/plats-bokningen kunde inte hämtas, var god försök igen."};$scope.locationBooking=null});return promise};that.getLocations=function(){var deferred=$q.defer(),promise=deferred.promise;$scope.locations=Location.query();$scope.locations.$promise.then(function(){deferred.resolve()});$scope.locations.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Lokaler kunde inte hämtas."}});return promise};$scope.save=function(){LocationBooking.save({BookingId:$scope.locationBooking.BookingId,LocationBookingId:$routeParams.locationBookingId,LocationId:$scope.locationBooking.LocationId,FurnituringId:$scope.locationBooking.SelectedFurnituring.FurnituringId,StartTime:moment($scope.StartDate+" "+$scope.StartTime).format(),EndTime:moment($scope.EndDate+" "+$scope.EndTime).format(),NumberOfPeople:$scope.locationBooking.NumberOfPeople}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:"Lokal/plats-bokningen sparades med ett lyckat resultat"};history.back()}).catch(function(response){if(response.status==409){$rootScope.FlashMessage={type:"error",message:"Det finns redan en annan lokal/plats-bokning som krockar med den här bokningen."}}else if(response.status==400||response.status==500){$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när lokal/plats-bokningen skulle sparas"}}if(response.status==404){$rootScope.FlashMessage={type:"error",message:"Lokal/plats-bokningen existerar inte längre. Hann kanske någon radera den?"};history.back()}})};$scope.updateFurniturings=function(){var i;if(!!$scope.locationBooking.LocationId){$scope.furniturings=LocationFurnituring.queryForLocation({locationId:$scope.locationBooking.LocationId});$scope.furniturings.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Möbleringar för vald lokal kunde inte hämtas."}}).then(function(){$scope.showInfoAboutNoFurniturings=!$scope.furniturings.length;for(i=0;i<$scope.furniturings.length;i++){if($scope.locationBooking.FurnituringId==$scope.furniturings[i].FurnituringId){$scope.locationBooking.SelectedFurnituring=$scope.furniturings[i]}}})}else{$scope.furnituring=[]}};that.initLocationBooking().then(function(){that.getLocations().then(function(){$scope.updateFurniturings()})})}]).controller("LocationBookingDeleteCtrl",["$scope","$routeParams","LocationBooking","$location","$rootScope","PHOTO_MISSING_SRC","API_IMG_PATH_URL",function($scope,$routeParams,LocationBooking,$location,$rootScope,PHOTO_MISSING_SRC,API_IMG_PATH_URL){var that=this;$scope.confirm=function(){LocationBooking.delete({locationBookingId:$routeParams.locationBookingId}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:"Lokal/plats-bokningen raderades med ett lyckat resultat"};history.back()}).catch(function(response){if(response.status==400&&response.data.Message!=="undefined"&&response.data.Message==="Foreign key references exists"){$rootScope.FlashMessage={type:"error",message:"Lokal/plats-bokningen kan inte raderas eftersom det finns"+" någonting som refererar till lokal/plats-bokningen"}}else if(response.status==400||response.status==500){$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när lokal/plats-bokningen skulle tas bort"}}if(response.status==404){$rootScope.FlashMessage={type:"error",message:"Lokal/plats-bokningen existerar inte längre. Hann kanske någon radera den?"}}history.back()})};var locationBooking=LocationBooking.get({locationBookingId:$routeParams.locationBookingId});locationBooking.$promise.then(function(){locationBooking.LocationImageSrc=locationBooking.LocationImageSrc===""?PHOTO_MISSING_SRC:API_IMG_PATH_URL+locationBooking.LocationImageSrc});locationBooking.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Lokal/plats-bokningen kunde inte hämtas, var god försök igen."};$scope.locationBooking=null});$scope.locationBooking=locationBooking}])})();