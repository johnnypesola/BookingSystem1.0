describe("module: bookingSystem.location",function(){beforeEach(module("bookingSystem"));beforeEach(module("bookingSystem.location"));beforeEach(module("bookingSystem.commonFilters"));var LocationMapCtrl;var testCurrentDateObj;var $scope;var $location;var $rootScope;beforeEach(function(){module(function($provide){$provide.factory("Location",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getLocation,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocation,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("LocationFurnituring",function($q){return{queryForLocation:jasmine.createSpy("queryForLocation").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryForLocation,$q)})}})})});beforeEach(inject(function($controller,_Location_,_$location_,$rootScope,_Redirect_){$location=_$location_;$scope=$rootScope;LocationMapCtrl=$controller("LocationMapCtrl",{$scope:$scope,Location:_Location_,Redirect:_Redirect_,$rootScope:$rootScope})}));describe("LocationMapCtrl controller",function(){it("should contain correct data after init",inject(function($rootScope,$controller,_Location_,$routeParams){$scope.$digest();expect($scope.map).toEqual({center:$rootScope.googleMapsDefaults.center,zoom:$rootScope.googleMapsDefaults.zoom,bounds:{}});expect(LocationMapCtrl.locations).toEqual(TestHelper.JSON.queryLocation)}));it("should contain correct map variables convertMarkers() method",inject(function($rootScope,$controller,_Location_,Redirect,$routeParams){LocationMapCtrl.initMapVariables();LocationMapCtrl.convertMarkers();LocationMapCtrl.locations.forEach(function(location,index,array){expect(location.GPSLatitude).toEqual($scope.markers[index].coords.latitude);expect(location.GPSLongitude).toEqual($scope.markers[index].coords.longitude);expect(location.LocationId).toEqual($scope.markers[index].id);expect(location.Name).toEqual($scope.markers[index].title)})}))})});