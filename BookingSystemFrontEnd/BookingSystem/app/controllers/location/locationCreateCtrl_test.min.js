describe("module: bookingSystem.location",function(){beforeEach(module("bookingSystem"));beforeEach(module("bookingSystem.location"));beforeEach(module("bookingSystem.commonFilters"));beforeEach(module("uiGmapgoogle-maps"));var LocationListCtrl,LocationCreateCtrl,LocationEditCtrl;var testCurrentDateObj;var $scope;var $location;var $rootScope;var $httpBackend;beforeEach(function(){module(function($provide){$provide.factory("Location",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getLocation,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocation,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({LocationId:3},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("Furnituring",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getFurnituring,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryFurnituring,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("LocationFurnituring",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getLocationFurnituring,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocationFurnituring,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),saveForLocation:jasmine.createSpy("saveForLocation").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("LocationImage",function($q){return{upload:jasmine.createSpy("upload").andCallFake(function(){return TestHelper.fakeHttpResponse({})})}})})});beforeEach(inject(function($controller,_Location_,_$location_,$rootScope,_$httpBackend_){$location=_$location_;$scope=$rootScope;LocationCreateCtrl=$controller("LocationCreateCtrl",{$scope:$scope,Location:_Location_,$rootScope:$rootScope,$httpBackend:_$httpBackend_})}));describe("LocationCreateCtrl controller",function(){it("should call history.back() and create a FlashMessage after successful Location creation",inject(function($rootScope,$controller,_Location_){spyOn(history,"back");$scope.location={Name:"Test"};$scope.save();expect(_Location_.save).toHaveBeenCalledWith({LocationId:0,Name:"Test"});$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect(history.back).toHaveBeenCalled()}));it("should create a FlashMessage after duplicate Location creation",inject(function($rootScope,$controller,_Location_,$q){_Location_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"409","There is already a Location with the given name.")});spyOn(history,"back");$scope.location={Name:"Test"};$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual('Det finns redan en plats som heter "Test". Två platser kan inte heta lika.');expect(history.back).not.toHaveBeenCalled()}));it("should create a FlashMessage after unsuccessful Location creation",inject(function($rootScope,$controller,_Location_,$q){_Location_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"500")});spyOn(history,"back");$scope.location={Name:"Test"};$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual("Ett oväntat fel uppstod när platsen skulle sparas");expect(history.back).not.toHaveBeenCalled()}))})});