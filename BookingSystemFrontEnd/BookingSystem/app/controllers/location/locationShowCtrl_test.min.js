describe("module: bookingSystem.location",function(){beforeEach(module("bookingSystem"));beforeEach(module("bookingSystem.location"));beforeEach(module("bookingSystem.commonFilters"));var LocationShowCtrl;var testCurrentDateObj;var $scope;var $location;var $rootScope;beforeEach(function(){module(function($provide){$provide.factory("Location",function($q){return{querySearch:jasmine.createSpy("querySearch").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocation,$q)}),get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getLocation,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryLocation,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("LocationFurnituring",function($q){return{queryForLocation:jasmine.createSpy("queryForLocation").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryForLocation,$q)})}})})});beforeEach(inject(function($controller,_Location_,_$location_,$rootScope,_Redirect_){$location=_$location_;$scope=$rootScope;LocationShowCtrl=$controller("LocationShowCtrl",{$scope:$scope,Location:_Location_,Redirect:_Redirect_,$rootScope:$rootScope})}));describe("LocationShowCtrl controller",function(){it("should contain correct data after init",inject(function($rootScope,$controller,_Location_,$routeParams){$routeParams.locationId=4;$scope.$digest();expect($scope.map).toEqual({center:$rootScope.googleMapsDefaults.center,zoom:$rootScope.googleMapsDefaults.zoom,bounds:{},options:{mapTypeId:google.maps.MapTypeId.SATELLITE}});expect($scope.location).toEqual(TestHelper.JSON.getLocation);expect($scope.location.furniturings).toEqual(TestHelper.JSON.queryForLocation)}));it("should contain correct map variables convertMarkers() method",inject(function($rootScope,$controller,_Location_,Redirect,$routeParams){$routeParams.locationId=4;LocationShowCtrl.initMapVariables();LocationShowCtrl.convertMarkers();expect($scope.map.zoom).toEqual(18);expect($scope.map.center).toEqual({latitude:$scope.location.GPSLatitude,longitude:$scope.location.GPSLongitude});expect($scope.markers[0]).toEqual({id:$scope.location.LocationId,coords:{latitude:$scope.location.GPSLatitude,longitude:$scope.location.GPSLongitude}})}))})});