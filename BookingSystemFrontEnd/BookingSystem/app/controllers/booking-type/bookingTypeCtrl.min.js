(function(){angular.module("bookingSystem.bookingType",["bookingSystem.bookingServices","bookingSystem.commonFilters","bookingSystem.commonDirectives"]).config(["$routeProvider",function($routeProvider){}]).controller("BookingTypeShowCtrl",["$scope","$routeParams","$location","$rootScope","BookingType",function($scope,$routeParams,$location,$rootScope,BookingType){var that=this;var bookingType=BookingType.get({bookingTypeId:$routeParams.bookingTypeId});bookingType.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstypen kunde inte hämtas, var god försök igen."};$scope.bookingType=null});$scope.bookingType=bookingType}]).controller("BookingTypeListCtrl",["$scope","BookingType","$rootScope",function($scope,BookingType,$rootScope){var bookingTypes=BookingType.query();bookingTypes.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstyper kunde inte hämtas, var god försök igen."}});$scope.bookingTypes=bookingTypes}]).controller("BookingTypeCreateCtrl",["$scope","$routeParams","$location","$rootScope","BookingType","Redirect",function($scope,$routeParams,$location,$rootScope,BookingType,Redirect){var that=this;that.initVariables=function(){$scope.bookingType={};$scope.bookingType.MinutesMarginBeforeBooking=0;$scope.bookingType.MinutesMarginAfterBooking=0};$scope.save=function(){BookingType.save({BookingTypeId:0,Name:$scope.bookingType.Name,HasLocation:!!parseInt($scope.bookingType.HasLocation,10),MinutesMarginBeforeBooking:$scope.bookingType.MinutesMarginBeforeBooking,MinutesMarginAfterBooking:$scope.bookingType.MinutesMarginAfterBooking}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:'Bokningstypen "'+$scope.bookingType.Name+'" skapades med ett lyckat resultat'};Redirect.to("visa/",response.BookingTypeId)}).catch(function(response){if(response.status==409){$rootScope.FlashMessage={type:"error",message:'Det finns redan en bokningstyp som heter "'+$scope.bookingType.Name+'". Två bokningstyper kan inte heta lika.'}}else{$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när bokningstypen skulle sparas"}}})};that.initVariables()}]).controller("BookingTypeEditCtrl",["$scope","$routeParams","$location","$rootScope","BookingType",function($scope,$routeParams,$location,$rootScope,BookingType){var that=this;$scope.save=function(){BookingType.save({BookingTypeId:$routeParams.bookingTypeId,Name:$scope.bookingType.Name,HasLocation:!!parseInt($scope.bookingType.HasLocation,10),MinutesMarginBeforeBooking:$scope.bookingType.MinutesMarginBeforeBooking,MinutesMarginAfterBooking:$scope.bookingType.MinutesMarginAfterBooking}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:'Bokningstypen "'+$scope.bookingType.Name+'" sparades med ett lyckat resultat'};history.back()}).catch(function(response){if(response.status==409){$rootScope.FlashMessage={type:"error",message:'Det finns redan en bokningstyp som heter "'+$scope.bookingType.Name+'". Två bokningstyper kan inte heta lika.'}}else if(response.status==400||response.status==500){$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när bokningstypen skulle sparas"}}if(response.status==404){$rootScope.FlashMessage={type:"error",message:'Bokningstypen "'+$scope.bookingType.Name+'" existerar inte längre. Hann kanske någon radera den?'};history.back()}})};var bookingType=BookingType.get({bookingTypeId:$routeParams.bookingTypeId});bookingType.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstypen kunde inte hämtas, var god försök igen."};$scope.bookingType=null});$scope.bookingType=bookingType}]).controller("BookingTypeDeleteCtrl",["$scope","$routeParams","BookingType","$location","$rootScope",function($scope,$routeParams,BookingType,$location,$rootScope){var that=this;$scope.confirm=function(){BookingType.delete({bookingTypeId:$routeParams.bookingTypeId}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:'Bokningstypen "'+$scope.bookingType.Name+'" raderades med ett lyckat resultat'};history.back()}).catch(function(response){if(response.status==400&&response.data.Message!=="undefined"&&response.data.Message==="Foreign key references exists"){$rootScope.FlashMessage={type:"error",message:"Bokningstypen kan inte raderas eftersom det finns"+" en bokning eller en resurs som refererar till bokningstypen"}}else if(response.status==400||response.status==500){$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när bokningstypen skulle tas bort"}}if(response.status==404){$rootScope.FlashMessage={type:"error",message:'Bokningstypen "'+$scope.bookingType.Name+'" existerar inte längre. Hann kanske någon radera den?'}}history.back()})};var bookingType=BookingType.get({bookingTypeId:$routeParams.bookingTypeId});bookingType.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstypen kunde inte hämtas, var god försök igen."};$scope.bookingType=null});$scope.bookingType=bookingType}])})();