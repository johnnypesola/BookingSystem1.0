describe("module: bookingSystem.customer",function(){beforeEach(module("bookingSystem"));beforeEach(module("bookingSystem.customer"));beforeEach(module("bookingSystem.commonFilters"));var CustomerListCtrl,CustomerCreateCtrl,CustomerEditCtrl;var testCurrentDateObj;var $scope;var $location;var $rootScope;beforeEach(function(){module(function($provide){$provide.factory("Customer",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getCustomer,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryCustomer,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}});$provide.factory("CustomerImage",function($q){return{upload:jasmine.createSpy("upload").andCallFake(function(){return TestHelper.fakeHttpResponse({})})}})})});beforeEach(inject(function($controller,_Customer_,_$location_,$rootScope){$location=_$location_;$scope=$rootScope;CustomerCreateCtrl=$controller("CustomerCreateCtrl",{$scope:$scope,Customer:_Customer_,$rootScope:$rootScope})}));describe("CustomerCreateCtrl controller",function(){it("should call history.back() and create a FlashMessage after successful Customer creation",inject(function($rootScope,$controller,_Customer_){spyOn(history,"back");$scope.customer={Name:"Test"};$scope.save();expect(_Customer_.save).toHaveBeenCalledWith({CustomerId:0,Name:"Test"});$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect(history.back).toHaveBeenCalled()}));it("should create a FlashMessage after duplicate Customer creation",inject(function($rootScope,$controller,_Customer_,$q){_Customer_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"409","There is already a Customer with the given name.")});spyOn(history,"back");$scope.customer={Name:"Test"};$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual('Det finns redan en kund som heter "Test". Två kunder kan inte heta lika.');expect(history.back).not.toHaveBeenCalled()}));it("should create a FlashMessage after unsuccessful Customer creation",inject(function($rootScope,$controller,_Customer_,$q){_Customer_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"500")});spyOn(history,"back");$scope.customer={Name:"Test"};$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual("Ett oväntat fel uppstod när kunden skulle sparas");expect(history.back).not.toHaveBeenCalled()}))})});