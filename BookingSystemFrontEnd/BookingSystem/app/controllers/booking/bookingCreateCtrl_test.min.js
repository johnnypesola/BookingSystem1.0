describe("module: bookingSystem.booking",function(){beforeEach(module("bookingSystem"));beforeEach(module("bookingSystem.booking"));beforeEach(module("bookingSystem.commonFilters"));var BookingListCtrl,BookingCreateCtrl,BookingEditCtrl;var testCurrentDateObj;var $scope;var $location;var $rootScope;beforeEach(function(){module(function($provide){$provide.factory("Booking",function($q){return{get:jasmine.createSpy("get").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.getBooking,$q)}),query:jasmine.createSpy("query").andCallFake(function(){return TestHelper.addPromiseToObject(TestHelper.JSON.queryBooking,$q)}),save:jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)}),"delete":jasmine.createSpy("delete").andCallFake(function(){return TestHelper.addPromiseToObject({},$q)})}})})});beforeEach(inject(function($controller,_Booking_,_$location_,$rootScope){$location=_$location_;$scope=$rootScope;BookingCreateCtrl=$controller("BookingCreateCtrl",{$scope:$scope,Booking:_Booking_,$rootScope:$rootScope})}));describe("BookingCreateCtrl controller",function(){it("should call history.back() and create a FlashMessage after successful Booking creation",inject(function($rootScope,$controller,_Booking_){spyOn(history,"back");$scope.booking={Name:"Test"};$scope.save();expect(_Booking_.save).toHaveBeenCalledWith({BookingId:0,Name:"Test"});$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect(history.back).toHaveBeenCalled()}));it("should create a FlashMessage after duplicate Booking creation",inject(function($rootScope,$controller,_Booking_,$q){_Booking_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"409","There is already a Booking with the given name.")});spyOn(history,"back");$scope.booking={Name:"Test"};$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual('Det finns redan en möblering som heter "Test". Två möbleringar kan inte heta lika.');expect(history.back).not.toHaveBeenCalled()}));it("should create a FlashMessage after unsuccessful Booking creation",inject(function($rootScope,$controller,_Booking_,$q){_Booking_.save=jasmine.createSpy("save").andCallFake(function(){return TestHelper.addPromiseToObject({},$q,"500")});spyOn(history,"back");$scope.booking={Name:"Test"};$scope.save();$scope.$digest();expect($rootScope.FlashMessage).toBeDefined();expect($rootScope.FlashMessage.message).toEqual("Ett oväntat fel uppstod när bokningen skulle sparas");expect(history.back).not.toHaveBeenCalled()}))})});