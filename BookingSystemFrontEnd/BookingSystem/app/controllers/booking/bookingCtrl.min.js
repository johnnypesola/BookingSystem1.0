(function(){angular.module("bookingSystem.booking",["bookingSystem.bookingServices","bookingSystem.commonFilters","bookingSystem.calendarDirective","bookingSystem.customerServices"]).config(["$routeProvider",function($routeProvider){}]).controller("BookingShowCtrl",["$scope","$routeParams","$location","$rootScope","Booking",function($scope,$routeParams,$location,$rootScope,Booking){var that=this;var booking=Booking.get({bookingId:$routeParams.bookingId});booking.$promise.then(function(){$scope.noLocationBookingsFound=!booking.LocationBookings.length});booking.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstillfället kunde inte hämtas, var god försök igen."};$scope.booking=null});$scope.booking=booking}]).controller("BookingDeleteCtrl",["$scope","$routeParams","$location","$rootScope","Booking","Redirect",function($scope,$routeParams,$location,$rootScope,Booking,Redirect){var that=this;$scope.confirm=function(){Booking.delete({bookingId:$routeParams.bookingId}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:"Bokningstillfället och dess underliggande Lokal/plats-bokningar raderades med ett lyckat resultat"};Redirect.to("lista")}).catch(function(response){if(response.status==400&&response.data.Message!=="undefined"&&response.data.Message==="Foreign key references exists"){$rootScope.FlashMessage={type:"error",message:"Bokningstillfället kan inte raderas eftersom det finns"+" någonting som refererar till bokningstillfället"}}else if(response.status==400||response.status==500){$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när bokningstillfället skulle tas bort"}}if(response.status==404){$rootScope.FlashMessage={type:"error",message:"Bokningstillfället existerar inte längre. Hann kanske någon radera den?"}}history.back()})};var booking=Booking.get({bookingId:$routeParams.bookingId});booking.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstillfället kunde inte hämtas, var god försök igen."};$scope.booking=null});$scope.booking=booking}]).controller("BookingListCtrl",["$scope","Booking","$rootScope","$location",function($scope,Booking,$rootScope,$location){var that=this;var currentDateObj;that.initDateVariables=function(){var yearParam=$location.search().ar;var monthParam=$location.search().manad;if(typeof yearParam!=="undefined"&&typeof monthParam!=="undefined"){currentDateObj=moment(yearParam+"-"+$BookSysUtil.String.addLeadingZero(+monthParam+1)+"-01").toDate()}else{currentDateObj=new Date}that.currentYear=currentDateObj.getFullYear();that.currentMonth=currentDateObj.getMonth();that.currentMonthName=moment(currentDateObj).format("MMMM");that.currentMonthNumberOfDays=new Date(that.currentYear,that.currentMonth+1,0).getDate();that.currentMonthStartDateObj=new Date(that.currentYear,that.currentMonth,1);that.currentMonthEndDateObj=new Date(that.currentYear,that.currentMonth,that.currentMonthNumberOfDays)};that.getBookings=function(){that.bookings=Booking.queryMoreForPeriod({fromDate:moment(that.currentMonthStartDateObj).format("YYYY-MM-DD"),toDate:moment(that.currentMonthEndDateObj).format("YYYY-MM-DD")});that.bookings.$promise.then(function(){$scope.noItemsFound=!that.bookings.length});that.bookings.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningarna kunde inte hämtas, var god försök igen."}});$scope.bookings=that.bookings};that.addVarsToScope=function(){$scope.currentYear=that.currentYear;$scope.currentMonthName=that.currentMonthName};$scope.changeToPreviousMonth=function(){if(that.currentMonth==0){that.currentMonth=11;that.currentYear-=1}else{that.currentMonth-=1}$location.search("ar",that.currentYear);$location.search("manad",that.currentMonth);that.initDateVariables();that.getBookings();that.addVarsToScope()};$scope.changeToNextMonth=function(){$location.search("ar",that.currentYear);$location.search("manad",that.currentMonth+1);that.initDateVariables();that.getBookings();that.addVarsToScope()};that.initDateVariables();that.getBookings();that.addVarsToScope()}]).controller("BookingCreateCtrl",["$scope","Booking","$rootScope","Customer","BookingType","Redirect",function($scope,Booking,$rootScope,Customer,BookingType,Redirect){var that=this;that.getOtherDisplayData=function(){$scope.customers=Customer.query();$scope.customers.$promise.then(function(){$scope.bookingTypes=BookingType.query();$scope.bookingTypes.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstyper kunde inte hämtas."}})});$scope.customers.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Kunder kunde inte hämtas."}})};$scope.save=function(){Booking.save({BookingId:0,Name:$scope.booking.Name,BookingTypeId:$scope.booking.BookingTypeId,CustomerId:$scope.booking.CustomerId,Provisional:!!parseInt($scope.booking.Provisional,10),NumberOfPeople:$scope.booking.NumberOfPeople,Discount:$scope.booking.Discount,Notes:$scope.booking.Notes,CreatedByUserId:1,ModifiedByUserId:1,ResponsibleUserId:1}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:"Bokningstillfället skapades med ett lyckat resultat"};Redirect.to("visa/",response.BookingId)}).catch(function(response){if(response.status==409){$rootScope.FlashMessage={type:"error",message:'Det finns redan ett bokningstillfälle som heter "'+$scope.booking.Name+'". Två bokningstillfällen kan inte heta lika.'}}else{$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när bokningstillfället skulle sparas"}}})};that.getOtherDisplayData()}]).controller("BookingEditCtrl",["$scope","Booking","$rootScope","Customer","BookingType","$q","$routeParams",function($scope,Booking,$rootScope,Customer,BookingType,$q,$routeParams){var that=this;that.getBooking=function(){var deferred=$q.defer(),promise=deferred.promise;$scope.booking=Booking.get({bookingId:$routeParams.bookingId});$scope.booking.$promise.then(function(){deferred.resolve()});$scope.booking.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstillfället kunde inte hämtas, var god försök igen."};$scope.booking=null});return promise};that.getOtherDisplayData=function(){$scope.customers=Customer.query();$scope.customers.$promise.then(function(){$scope.bookingTypes=BookingType.query();$scope.bookingTypes.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningstyper kunde inte hämtas."}})});$scope.customers.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Kunder kunde inte hämtas."}})};$scope.save=function(){Booking.save({BookingId:$scope.booking.BookingId,Name:$scope.booking.Name,BookingTypeId:$scope.booking.BookingTypeId,CustomerId:$scope.booking.CustomerId,Provisional:!!parseInt($scope.booking.Provisional,10),NumberOfPeople:$scope.booking.NumberOfPeople,Discount:$scope.booking.Discount,Notes:$scope.booking.Notes,CreatedByUserId:1,ModifiedByUserId:1,ResponsibleUserId:1}).$promise.then(function(response){$rootScope.FlashMessage={type:"success",message:"Bokningstillfället sparades med ett lyckat resultat"};history.back()}).catch(function(response){if(response.status==409){$rootScope.FlashMessage={type:"error",message:'Det finns redan ett bokningstillfälle som heter "'+$scope.booking.Name+'". Två bokningstillfällen kan inte heta lika.'}}else if(response.status==404){$rootScope.FlashMessage={type:"error",message:'Bokningstillfället "'+$scope.booking.Name+'" existerar inte längre. Hann kanske någon radera den?'};history.back()}else{$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när bokningstillfället skulle sparas"}}})};that.getBooking().then(function(){that.getOtherDisplayData()})}]).controller("BookingSearchCtrl",["$scope","Booking","$rootScope",function($scope,Booking,$rootScope){var that=this;$scope.search=function(){$scope.searchResults=Booking.querySearch({column:$scope.searchColumn,value:$scope.searchValue});$scope.searchResults.$promise.then(function(){$scope.noSearchResultsFound=!$scope.searchResults.length}).catch(function(response){$rootScope.FlashMessage={type:"error",message:"Ett oväntat fel uppstod när sökresultaten hämtades. Var god försök igen."}})};$scope.searchColumn="Name"}]).controller("BookingListEmptyCtrl",["$scope","Booking","$rootScope","$location",function($scope,Booking,$rootScope,$location){var that=this;var currentDateObj;that.getBookings=function(){that.bookings=Booking.queryEmpty();that.bookings.$promise.then(function(){$scope.noItemsFound=!that.bookings.length});that.bookings.$promise.catch(function(){$rootScope.FlashMessage={type:"error",message:"Bokningarna kunde inte hämtas, var god försök igen."}});$scope.bookings=that.bookings};that.getBookings()}])})();